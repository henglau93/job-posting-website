{"ast":null,"code":"var _jsxFileName = \"/Users/dedm/Documents/project/jobpostingapp/src/components/Create/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport './Create.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [form, setForm] = useState({\n    title: \"\",\n    location: \"\",\n    description: \"\",\n    date: \"\",\n    status: \"\"\n  });\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newPerson = { ...form\n    };\n    await fetch(\"/createpost\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      title: \"\",\n      location: \"\",\n      description: \"\",\n      date: \"\",\n      status: \"\"\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-form-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Job Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Job title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            value: form.title,\n            onChange: e => updateForm({\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"location\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Job location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"location\",\n            value: form.location,\n            onChange: e => updateForm({\n              location: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Job description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            value: form.description,\n            onChange: e => updateForm({\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form-button-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Create, \"70Tg+WlgaJemBnWpDGRtXUvW+7w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useNavigate","Create","form","setForm","title","location","description","date","status","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","target"],"sources":["/Users/dedm/Documents/project/jobpostingapp/src/components/Create/Create.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport './Create.css';\n \nexport default function Create() {\n const [form, setForm] = useState({\n   title: \"\",\n   location: \"\",\n   description: \"\",\n   date: \"\",\n   status: \"\",\n });\n const navigate = useNavigate();\n \n // These methods will update the state properties.\n function updateForm(value) {\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n \n // This function will handle the submission.\n async function onSubmit(e) {\n   e.preventDefault();\n \n   // When a post request is sent to the create url, we'll add a new record to the database.\n   const newPerson = { ...form };\n \n   await fetch(\"/createpost\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify(newPerson),\n   })\n   .catch(error => {\n     window.alert(error);\n     return;\n   });\n \n   setForm({ title: \"\", location: \"\", description: \"\", date: \"\", status: \"\" });\n   navigate(\"/\");\n }\n \n // This following section will display the form that takes the input from the user.\n return (\n   <div className=\"create-form-wrapper\">\n    <div className=\"loginForm\">\n\n    \n     <h3>Create New Job Post</h3>\n     <form onSubmit={onSubmit}>\n        <label htmlFor=\"title\">\n          <p>Job title</p>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={form.title}\n            onChange={(e) => updateForm({ title: e.target.value })}\n          />\n        </label>\n        <label htmlFor=\"location\">\n          <p>Job location</p>\n          <input\n            type=\"text\"\n            id=\"location\"\n            value={form.location}\n            onChange={(e) => updateForm({ location: e.target.value })}\n          />\n        </label>\n        <label htmlFor=\"description\">\n          <p>Job description</p>\n          <input\n            type=\"text\"\n            id=\"description\"\n            value={form.description}\n            onChange={(e) => updateForm({ description: e.target.value })}\n          />\n        </label>\n        <div className=\"login-form-button-wrapper\">\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n          />\n        </div>\n     </form>\n     </div>\n   </div>\n );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}