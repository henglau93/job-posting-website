{"ast":null,"code":"var _jsxFileName = \"/Users/dedm/Documents/project/jobpostingapp/src/components/Create/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport './Create.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    password: \"\",\n    position: \"\",\n    level: \"\"\n  });\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newPerson = { ...form\n    };\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      password: \"\",\n      position: \"\",\n      level: \"\"\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-form-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Job Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Job title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        value: form.name,\n        onChange: e => updateForm({\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"location\",\n        children: \"Job location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"password\",\n        value: form.password,\n        onChange: e => updateForm({\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"position\",\n        children: \"Job description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"position\",\n        value: form.position,\n        onChange: e => updateForm({\n          position: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Create, \"hSJ61Rzkx/4d5NsOVs5fQRxlgZI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useNavigate","Create","form","setForm","name","password","position","level","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","target"],"sources":["/Users/dedm/Documents/project/jobpostingapp/src/components/Create/Create.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport './Create.css';\n \nexport default function Create() {\n const [form, setForm] = useState({\n   name: \"\",\n   password: \"\",\n   position: \"\",\n   level: \"\",\n });\n const navigate = useNavigate();\n \n // These methods will update the state properties.\n function updateForm(value) {\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n \n // This function will handle the submission.\n async function onSubmit(e) {\n   e.preventDefault();\n \n   // When a post request is sent to the create url, we'll add a new record to the database.\n   const newPerson = { ...form };\n \n   await fetch(\"http://localhost:5000/record/add\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify(newPerson),\n   })\n   .catch(error => {\n     window.alert(error);\n     return;\n   });\n \n   setForm({ name: \"\", password: \"\", position: \"\", level: \"\" });\n   navigate(\"/\");\n }\n \n // This following section will display the form that takes the input from the user.\n return (\n   <div className=\"create-form-wrapper\">\n     <h3>Create New Job Post</h3>\n     <form onSubmit={onSubmit}>\n         <label htmlFor=\"name\">Job title</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"name\"\n           value={form.name}\n           onChange={(e) => updateForm({ name: e.target.value })}\n         />\n         <label htmlFor=\"location\">Job location</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"password\"\n           value={form.password}\n           onChange={(e) => updateForm({ password: e.target.value })}\n         />\n         <label htmlFor=\"position\">Job description</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"position\"\n           value={form.position}\n           onChange={(e) => updateForm({ position: e.target.value })}\n         />\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n     </form>\n   </div>\n );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}