{"ast":null,"code":"var _jsxFileName = \"/Users/dedm/Documents/project/jobpostingapp/src/components/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from \"react-router-dom\"; //import { Link } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.location\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.date\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Record;\nexport default function Dashboard() {\n  _s();\n\n  const [records, setRecords] = useState([]); // This method fetches the records from the database.\n\n  useEffect(() => {\n    async function getRecords() {\n      //const response = await fetch(`http://localhost:5000/record/`);\n      const msg = {\n        \"username\": \"test1\"\n      };\n      const response = await fetch(`/getpostlist`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(msg),\n        mode: 'cors'\n      }); //console.log(\"responseJson~~~~:\",response);\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      console.log(\"records~~~~:\", records);\n      setRecords(records);\n    }\n\n    getRecords();\n    return;\n  }, [records.length]); // This method will delete a record\n\n  /*\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n  \n    const newRecords = records.filter((el) => el._id !== id);\n    setRecords(newRecords);\n  }\n  */\n  // This method will map out the records on the table\n\n  function recordList() {\n    return records.map(record => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: record\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"nav-link\",\n          to: \"/create\",\n          children: \"Create Job Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: recordList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n\n_c2 = Dashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","NavLink","Record","props","record","title","location","description","date","Dashboard","records","setRecords","getRecords","msg","response","fetch","method","headers","body","JSON","stringify","mode","ok","message","statusText","window","alert","json","console","log","length","recordList","map","marginTop"],"sources":["/Users/dedm/Documents/project/jobpostingapp/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { NavLink } from \"react-router-dom\";\n//import { Link } from \"react-router-dom\";\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.title}</td>\n    <td>{props.record.location}</td>\n    <td>{props.record.description}</td>\n    <td>{props.record.date}</td>\n  </tr>\n);\n\nexport default function Dashboard() {\n  const [records, setRecords] = useState([]);\n \n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      //const response = await fetch(`http://localhost:5000/record/`);\n      const msg = {\"username\": \"test1\"};\n      const response = await fetch(`/getpostlist`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(msg),\n        mode: 'cors'\n      });\n      //console.log(\"responseJson~~~~:\",response);\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n  \n      const records = await response.json();\n      console.log(\"records~~~~:\",records);\n      setRecords(records);\n    }\n  \n    getRecords();\n  \n    return;\n  }, [records.length]);\n  \n  // This method will delete a record\n  /*\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n  \n    const newRecords = records.filter((el) => el._id !== id);\n    setRecords(newRecords);\n  }\n  */\n  // This method will map out the records on the table\n  function recordList() {\n    return records.map((record) => {\n      return (\n        <Record\n          record={record}\n        />\n      );\n    });\n  }\n\n  return(\n    <div>\n      <h2>Dashboard</h2>\n      <div>\n        <nav>\n          <NavLink className=\"nav-link\" to=\"/create\">\n            Create Job Post\n          </NavLink>\n        </nav>\n      </div>\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n       <thead>\n         <tr>\n           <th>Title</th>\n           <th>Location</th>\n           <th>Description</th>\n           <th>Date</th>\n           <th>Status</th>\n         </tr>\n       </thead>\n       <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}